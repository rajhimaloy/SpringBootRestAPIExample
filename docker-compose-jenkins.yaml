version: '3.8'

networks:
  #my-micro-app-net:
    #external: true
  micro-app-net:
    name: my-micro-app-net
    driver: bridge

volumes:
  jenkins_home:
  jenkins_docker_certs:

services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins-container
    restart: unless-stopped
    privileged: true
    user: root
    ports:
      - "8181:8080"  # Corrected port mapping
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Important for Docker access
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false #To start in an unlocked state, means no need login
    networks:
      #- my-micro-app-net
      - micro-app-net

  jenkins-docker:
    image: docker:dind
    container_name: jenkins-docker-container
    privileged: true
    restart: unless-stopped
    environment:
      - DOCKER_TLS_CERTDIR=   # Disable TLS (fixes connection issue)
    ports:
      - "2375:2375"  # Explicitly expose Docker API
    networks:
      - micro-app-net

#end of scripts
# docker-compose -f docker-compose-jenkins.yaml up -d
# docker ps
# docker exec jenkins-container cat /var/jenkins_home/secrets/initialAdminPassword  #If Djenkins.install.runSetupWizard=true
# Also can change the security setting from here:- /var/jenkins_home/config.xml
  # docker exec -it jenkins-container bash
  # cat /var/jenkins_home/config.xml
  # nano /var/jenkins_home/config.xml
  # <useSecurity>true</useSecurity>
  # <user>
  #  <fullName>admin</fullName>
  #  <passwordHash>#jbcrypt:$2a$10$7EqJtq98hPqEX7fNZaFWoO/</passwordHash>
  #</user>
  # docker restart jenkins-container
  # Username/Password: admin/admin
# curl http://localhost:8080/student
# Or open http://localhost:8080/student in a browser.

# Troubleshoot
# docker ps -a
# docker network create my-micro-app-net
# docker-compose -f docker-compose-jenkins.yaml down
# docker volume rm jenkins_home jenkins_docker_certs  #If Djenkins.install.runSetupWizard=true
# docker-compose -f docker-compose-jenkins.yaml up -d
# docker exec jenkins-container cat /var/jenkins_home/secrets/initialAdminPassword  #If Djenkins.install.runSetupWizard=true
# docker logs jenkins-container

# Jenkins is working, continue with:
  # Install Plugins: Manage Jenkins â†’ Plugin Manager
  # Create a new Pipeline Job
  # Connect to GitHub
  # Run your Jenkinsfile Pipeline

# This ensures the Jenkins user has permission to use Docker
  # docker exec -it jenkins-container bash
  # groupadd docker
  # usermod -aG docker jenkins
  # chown jenkins:docker /var/run/docker.sock
  # chown root:docker /var/run/docker.sock
  # chmod 777 /var/run/docker.sock
  # exit
  # docker restart jenkins-container
  # docker ps --format "table {{.Names}}\t{{.Status}}"
  # docker start jenkins-docker-container
  # docker exec -it jenkins-docker-container sh
  # Inside the container, check if the Docker daemon is running:
  # docker version
  # If you see an error, manually start the daemon:
  # dockerd &
  # docker restart jenkins-docker-container
  # docker restart jenkins-container